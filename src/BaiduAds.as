package {		import flash.display.Loader;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.external.ExternalInterface;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.system.Security;	import flash.text.TextField;	import flash.utils.Timer;			public class BaiduAds extends Sprite implements IPreAdBase{		private var ld:Loader;		private var con:*;		private var swfurl:String="http://dn.baidu.com/flash/loader_as3.swf";		private var adwidth:int=0;		private var adheight:int=0;		private var id:int=0;		public function BaiduAds() {					}		public function disposeAd():void{			this.removeChild(this.ld);		}				public function get duration():Number		{			// TODO Auto Generated method stub			return con["duration"]();		}				public function get spend():Number		{			// TODO Auto Generated method stub			return 0;		}				public function get time():Number		{			// TODO Auto Generated method stub			return con["getCurrentTimeValue"]();		}				public function configureParameters(value:Object):void{			this.adwidth=value.width;			this.adheight=value.height;			this.id=value.id;			this.loadAd("dn.baidu.com",this.swfurl);		}		private function loadAd(hostName:String,url:String):void{			Security.allowDomain(hostName);			ld=new Loader();			ld.contentLoaderInfo.addEventListener(Event.COMPLETE,onldcomplete);			ld.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,onlderror);			ld.load(new URLRequest(url));			this.addChild(ld);		}		private function onlderror(evt:IOErrorEvent):void{			ld.contentLoaderInfo.removeEventListener(Event.COMPLETE,onldcomplete);			ld.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR,onlderror);			this.dispatchEvent(new Event("onlderror"));		}		private function onldcomplete(evt:Event):void{			ld.contentLoaderInfo.removeEventListener(Event.COMPLETE,onldcomplete);			ld.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR,onlderror);			con=ld.content;			var param:Object = new Object();			param.dan_w = this.adwidth;			param.dan_h = this.adheight;			param.dan_id = this.id;			con["setNoAdCallback"](noAdCallbackFunc);			con["requestAdData"](requestedFunc, finishedFunc, param);					}		private function noAdCallbackFunc():void{			this.dispatchEvent(new Event("onadnone"));		}		private function requestedFunc():void{			this.dispatchEvent(new Event("onadstart"));		}		private function finishedFunc():void{			this.dispatchEvent(new Event("onadend"));		}		private function onAdNone(evt:Event):void{			this.dispatchEvent(new Event("onadnone"));		}		private function onAdFailed(evt:Event):void{			this.dispatchEvent(new Event("onadfailed"));		}		private function onAdClick(evt:Event):void{			this.dispatchEvent(new Event("onadclick"));		}		private function onAdStart(evt:Event):void{			this.dispatchEvent(new Event("onadstart"));		}		private function onAdEnd(evt:Event):void{			this.dispatchEvent(new Event("onadend"));			this.removeChild(ld);			ld.removeEventListener("show_end",onAdEnd);			ld.removeEventListener("ad_none",onAdNone);			ld.removeEventListener("load_failed",onAdFailed);			ld.removeEventListener("show_start",onAdStart);			ld.removeEventListener("ad_click",onAdStart);			ld.unloadAndStop();		}	}	}